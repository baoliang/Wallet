{
  "swagger": "2.0",
  "info": {
    "title": "MASS-Wallet API",
    "version": "1.0",
    "contact": {
      "name": "MASS project",
      "url": "https://massnet.org/",
      "email": "contact@massnet.org"
    },
    "license": {}
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/x-foo-mime"
  ],
  "produces": [
    "application/json",
    "application/x-foo-mime"
  ],
  "paths": {
    "/v1/addresses/balance": {
      "post": {
        "summary": "if addresses not provided, return balances of all addresses",
        "operationId": "ApiService_GetAddressBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetAddressBalanceResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetAddressBalanceRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/addresses/binding": {
      "post": {
        "summary": "query by poc addresses",
        "operationId": "ApiService_GetAddressBinding",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetAddressBindingResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetAddressBindingRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/addresses/create": {
      "post": {
        "operationId": "ApiService_CreateAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateAddressResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateAddressRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/addresses/utxos": {
      "post": {
        "summary": "if addresses not provided, return utxos of all addresses",
        "operationId": "ApiService_GetUtxo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetUtxoResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetUtxoRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/addresses/{address}/validate": {
      "get": {
        "operationId": "ApiService_ValidateAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufValidateAddressResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/addresses/{version}": {
      "get": {
        "operationId": "ApiService_GetAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetAddressesResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "p",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/blocks/best": {
      "get": {
        "operationId": "ApiService_GetBestBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetBestBlockResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/client/quit": {
      "post": {
        "operationId": "ApiService_QuitClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufQuitClientResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/client/status": {
      "get": {
        "operationId": "ApiService_GetClientStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetClientStatusResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/binding": {
      "post": {
        "operationId": "ApiService_CreateBindingTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateBindingTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/binding/history": {
      "get": {
        "operationId": "ApiService_GetBindingHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetBindingHistoryResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/create": {
      "post": {
        "operationId": "ApiService_CreateRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateRawTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/create/auto": {
      "post": {
        "operationId": "ApiService_AutoCreateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufAutoCreateTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/createraw": {
      "post": {
        "operationId": "ApiService_CreateSigRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateSigRawTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/fee": {
      "post": {
        "operationId": "ApiService_GetTransactionFee",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetTransactionFeeResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetTransactionFeeRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/history": {
      "post": {
        "operationId": "ApiService_TxHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufTxHistoryResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufTxHistoryRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/send": {
      "post": {
        "operationId": "ApiService_SendRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufSendRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufSendRawTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/sign": {
      "post": {
        "operationId": "ApiService_SignRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufSignRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufSignRawTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/staking": {
      "post": {
        "operationId": "ApiService_CreateStakingTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateStakingTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/staking/history": {
      "get": {
        "operationId": "ApiService_GetStakingHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetStakingHistoryResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/staking/latestreward": {
      "get": {
        "summary": "returns staking rewards in latest block",
        "operationId": "ApiService_GetLatestRewardList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetLatestRewardListResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/{tx_id}/details": {
      "get": {
        "summary": "get tx from chaindb",
        "operationId": "ApiService_GetRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetRawTransactionResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tx_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/transactions/{tx_id}/status": {
      "get": {
        "operationId": "ApiService_GetTxStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetTxStatusResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "tx_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets": {
      "get": {
        "summary": "commands act on a wallet",
        "operationId": "ApiService_Wallets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufWalletsResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/create": {
      "post": {
        "summary": "just create non-poc wallet",
        "operationId": "ApiService_CreateWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateWalletResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufCreateWalletRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/current/balance": {
      "post": {
        "operationId": "ApiService_GetWalletBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetWalletBalanceResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetWalletBalanceRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/export": {
      "post": {
        "operationId": "ApiService_ExportWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufExportWalletResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufExportWalletRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/import": {
      "post": {
        "operationId": "ApiService_ImportWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufImportWalletResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufImportWalletRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/import/mnemonic": {
      "post": {
        "operationId": "ApiService_ImportWalletWithMnemonic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufImportWalletResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufImportWalletWithMnemonicRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/mnemonic": {
      "post": {
        "operationId": "ApiService_GetWalletMnemonic",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetWalletMnemonicResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufGetWalletMnemonicRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/remove": {
      "post": {
        "operationId": "ApiService_RemoveWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufRemoveWalletResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufRemoveWalletRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/v1/wallets/use": {
      "post": {
        "operationId": "ApiService_UseWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rpcprotobufUseWalletResponse"
            }
          },
          "403": {
            "description": "No permission.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "404": {
            "description": "Not found.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rpcprotobufUseWalletRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    }
  },
  "definitions": {
    "GetAddressesResponseAddressDetail": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "used": {
          "type": "boolean"
        },
        "std_address": {
          "type": "string"
        }
      }
    },
    "GetBindingHistoryResponseBindingUTXO": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        },
        "holder_address": {
          "type": "string"
        },
        "binding_address": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "GetBindingHistoryResponseHistory": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "block_height": {
          "type": "string",
          "format": "uint64"
        },
        "utxo": {
          "$ref": "#/definitions/GetBindingHistoryResponseBindingUTXO"
        },
        "from_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetClientStatusResponsepeerCountInfo": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "outbound": {
          "type": "integer",
          "format": "int64"
        },
        "inbound": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GetClientStatusResponsepeerInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        }
      }
    },
    "GetClientStatusResponsepeerList": {
      "type": "object",
      "properties": {
        "outbound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClientStatusResponsepeerInfo"
          }
        },
        "inbound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClientStatusResponsepeerInfo"
          }
        },
        "other": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClientStatusResponsepeerInfo"
          }
        }
      }
    },
    "GetLatestRewardListResponseRewardDetail": {
      "type": "object",
      "properties": {
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "string"
        },
        "weight": {
          "type": "number",
          "format": "double"
        },
        "address": {
          "type": "string"
        },
        "profit": {
          "type": "string"
        }
      }
    },
    "GetStakingHistoryResponseStakingUTXO": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "frozen_period": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GetStakingHistoryResponseTx": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int64"
        },
        "block_height": {
          "type": "string",
          "format": "uint64"
        },
        "utxo": {
          "$ref": "#/definitions/GetStakingHistoryResponseStakingUTXO"
        }
      }
    },
    "GetWalletBalanceResponseDetail": {
      "type": "object",
      "properties": {
        "spendable": {
          "type": "string"
        },
        "withdrawable_staking": {
          "type": "string"
        },
        "withdrawable_binding": {
          "type": "string"
        }
      }
    },
    "TxHistoryDetailsInput": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "index": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "VinRedeemDetail": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "witness": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VoutScriptDetail": {
      "type": "object",
      "properties": {
        "asm": {
          "type": "string"
        },
        "hex": {
          "type": "string"
        },
        "req_sigs": {
          "type": "integer",
          "format": "int32"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WalletsResponseWalletSummary": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "remarks": {
          "type": "string"
        },
        "ready": {
          "type": "boolean"
        },
        "synced_height": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcprotobufAddressAndBalance": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "spendable": {
          "type": "string"
        },
        "withdrawable_staking": {
          "type": "string"
        },
        "withdrawable_binding": {
          "type": "string"
        }
      }
    },
    "rpcprotobufAddressUTXO": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "utxos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufUTXO"
          }
        }
      }
    },
    "rpcprotobufAutoCreateTransactionRequest": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lock_time": {
          "type": "string",
          "format": "uint64"
        },
        "fee": {
          "type": "string"
        },
        "from_address": {
          "type": "string"
        }
      }
    },
    "rpcprotobufBlockInfoForTx": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64"
        },
        "block_hash": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "rpcprotobufCreateAddressRequest": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "p": {
          "type": "string"
        }
      }
    },
    "rpcprotobufCreateAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "rpcprotobufCreateBindingTransactionRequest": {
      "type": "object",
      "properties": {
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufCreateBindingTransactionRequestOutput"
          }
        },
        "from_address": {
          "type": "string"
        },
        "fee": {
          "type": "string"
        }
      }
    },
    "rpcprotobufCreateBindingTransactionRequestOutput": {
      "type": "object",
      "properties": {
        "holder_address": {
          "type": "string"
        },
        "binding_address": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "rpcprotobufCreateRawTransactionRequest": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufTransactionInput"
          }
        },
        "amounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lock_time": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "rpcprotobufCreateRawTransactionResponse": {
      "type": "object",
      "properties": {
        "hex": {
          "type": "string"
        }
      }
    },
    "rpcprotobufCreateSigRawTransactionRequest": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufTransactionInput"
          }
        },
        "amounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "p": {
          "type": "string"
        },
        "txouts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufTransactionOutput"
          }
        }
      }
    },
    "rpcprotobufCreateStakingTransactionRequest": {
      "type": "object",
      "properties": {
        "from_address": {
          "type": "string"
        },
        "staking_address": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "frozen_period": {
          "type": "integer",
          "format": "int64"
        },
        "fee": {
          "type": "string"
        }
      }
    },
    "rpcprotobufCreateWalletRequest": {
      "type": "object",
      "properties": {
        "passphrase": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "bit_size": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "rpcprotobufCreateWalletResponse": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        },
        "mnemonic": {
          "type": "string"
        }
      }
    },
    "rpcprotobufExportWalletRequest": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      }
    },
    "rpcprotobufExportWalletResponse": {
      "type": "object",
      "properties": {
        "keystore": {
          "type": "string"
        }
      }
    },
    "rpcprotobufGetAddressBalanceRequest": {
      "type": "object",
      "properties": {
        "required_confirmations": {
          "type": "integer",
          "format": "int32"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "rpcprotobufGetAddressBalanceResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufAddressAndBalance"
          }
        }
      }
    },
    "rpcprotobufGetAddressBindingRequest": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "rpcprotobufGetAddressBindingResponse": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "rpcprotobufGetAddressesResponse": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetAddressesResponseAddressDetail"
          }
        }
      }
    },
    "rpcprotobufGetBestBlockResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "rpcprotobufGetBindingHistoryResponse": {
      "type": "object",
      "properties": {
        "histories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetBindingHistoryResponseHistory"
          }
        }
      }
    },
    "rpcprotobufGetClientStatusResponse": {
      "type": "object",
      "properties": {
        "peer_listening": {
          "type": "boolean"
        },
        "syncing": {
          "type": "boolean"
        },
        "chain_id": {
          "type": "string"
        },
        "local_best_height": {
          "type": "string",
          "format": "uint64"
        },
        "known_best_height": {
          "type": "string",
          "format": "uint64"
        },
        "wallet_sync_height": {
          "type": "string",
          "format": "uint64"
        },
        "peer_count": {
          "$ref": "#/definitions/GetClientStatusResponsepeerCountInfo"
        },
        "peers": {
          "$ref": "#/definitions/GetClientStatusResponsepeerList"
        }
      }
    },
    "rpcprotobufGetLatestRewardListResponse": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetLatestRewardListResponseRewardDetail"
          }
        }
      }
    },
    "rpcprotobufGetRawTransactionResponse": {
      "type": "object",
      "properties": {
        "hex": {
          "type": "string"
        },
        "tx_id": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "lock_time": {
          "type": "string",
          "format": "int64"
        },
        "block": {
          "$ref": "#/definitions/rpcprotobufBlockInfoForTx"
        },
        "vin": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufVin"
          }
        },
        "vout": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufVout"
          }
        },
        "payload": {
          "type": "string"
        },
        "confirmations": {
          "type": "string",
          "format": "uint64"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "fee": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "coinbase": {
          "type": "boolean"
        }
      }
    },
    "rpcprotobufGetStakingHistoryResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetStakingHistoryResponseTx"
          }
        },
        "weights": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "rpcprotobufGetTransactionFeeRequest": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lock_time": {
          "type": "string",
          "format": "uint64"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufTransactionInput"
          }
        },
        "has_binding": {
          "type": "boolean"
        }
      }
    },
    "rpcprotobufGetTransactionFeeResponse": {
      "type": "object",
      "properties": {
        "fee": {
          "type": "string"
        }
      }
    },
    "rpcprotobufGetTxStatusResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "rpcprotobufGetUtxoRequest": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "rpcprotobufGetUtxoResponse": {
      "type": "object",
      "properties": {
        "address_utxos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufAddressUTXO"
          }
        }
      }
    },
    "rpcprotobufGetWalletBalanceRequest": {
      "type": "object",
      "properties": {
        "required_confirmations": {
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "type": "boolean"
        }
      }
    },
    "rpcprotobufGetWalletBalanceResponse": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "detail": {
          "$ref": "#/definitions/GetWalletBalanceResponseDetail"
        }
      }
    },
    "rpcprotobufGetWalletMnemonicRequest": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      }
    },
    "rpcprotobufGetWalletMnemonicResponse": {
      "type": "object",
      "properties": {
        "mnemonic": {
          "type": "string"
        }
      }
    },
    "rpcprotobufImportWalletRequest": {
      "type": "object",
      "properties": {
        "keystore": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      }
    },
    "rpcprotobufImportWalletResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "wallet_id": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "remarks": {
          "type": "string"
        }
      }
    },
    "rpcprotobufImportWalletWithMnemonicRequest": {
      "type": "object",
      "properties": {
        "mnemonic": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "external_index": {
          "type": "integer",
          "format": "int64"
        },
        "internal_index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "rpcprotobufQuitClientResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "format": "int64"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "rpcprotobufRemoveWalletRequest": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      }
    },
    "rpcprotobufRemoveWalletResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        }
      }
    },
    "rpcprotobufSendRawTransactionRequest": {
      "type": "object",
      "properties": {
        "hex": {
          "type": "string"
        }
      }
    },
    "rpcprotobufSendRawTransactionResponse": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        }
      }
    },
    "rpcprotobufSignRawTransactionRequest": {
      "type": "object",
      "properties": {
        "raw_tx": {
          "type": "string"
        },
        "flags": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      }
    },
    "rpcprotobufSignRawTransactionResponse": {
      "type": "object",
      "properties": {
        "hex": {
          "type": "string"
        },
        "complete": {
          "type": "boolean"
        }
      }
    },
    "rpcprotobufTransactionInput": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "rpcprotobufTransactionOutput": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "uint64"
        },
        "pkscript": {
          "type": "string"
        }
      }
    },
    "rpcprotobufTxHistoryDetails": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "block_height": {
          "type": "string",
          "format": "uint64"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TxHistoryDetailsInput"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufTxHistoryDetailsOutput"
          }
        },
        "from_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "rpcprotobufTxHistoryDetailsOutput": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "rpcprotobufTxHistoryRequest": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "rpcprotobufTxHistoryResponse": {
      "type": "object",
      "properties": {
        "histories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rpcprotobufTxHistoryDetails"
          }
        }
      }
    },
    "rpcprotobufUTXO": {
      "type": "object",
      "properties": {
        "tx_id": {
          "type": "string"
        },
        "vout": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "string"
        },
        "block_height": {
          "type": "string",
          "format": "uint64"
        },
        "maturity": {
          "type": "integer",
          "format": "int64"
        },
        "confirmations": {
          "type": "integer",
          "format": "int64"
        },
        "spent_by_unmined": {
          "type": "boolean"
        }
      }
    },
    "rpcprotobufUseWalletRequest": {
      "type": "object",
      "properties": {
        "wallet_id": {
          "type": "string"
        }
      }
    },
    "rpcprotobufUseWalletResponse": {
      "type": "object",
      "properties": {
        "chain_id": {
          "type": "string"
        },
        "wallet_id": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "total_balance": {
          "type": "string"
        },
        "external_key_count": {
          "type": "integer",
          "format": "int32"
        },
        "internal_key_count": {
          "type": "integer",
          "format": "int32"
        },
        "remarks": {
          "type": "string"
        }
      }
    },
    "rpcprotobufValidateAddressResponse": {
      "type": "object",
      "properties": {
        "is_valid": {
          "type": "boolean"
        },
        "is_mine": {
          "type": "boolean"
        },
        "address": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "rpcprotobufVin": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "n": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "redeem_detail": {
          "$ref": "#/definitions/VinRedeemDetail"
        }
      }
    },
    "rpcprotobufVout": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "n": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int64"
        },
        "script_detail": {
          "$ref": "#/definitions/VoutScriptDetail"
        }
      }
    },
    "rpcprotobufWalletsResponse": {
      "type": "object",
      "properties": {
        "wallets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WalletsResponseWalletSummary"
          }
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "MASS-Wallet API Documentation",
    "url": "https://massnet.org/"
  }
}
